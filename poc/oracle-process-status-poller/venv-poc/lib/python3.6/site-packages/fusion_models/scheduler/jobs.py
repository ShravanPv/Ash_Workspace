from datetime import datetime

from sqlalchemy import Integer, Column, String, DateTime, text, Sequence, \
    Boolean, ForeignKey
from sqlalchemy.dialects.postgresql import JSONB

from fusion_models.scheduler.base import SchedulerBase


class Job(SchedulerBase):
    __tablename__ = 'jobs'

    id = Column(Integer, Sequence('jobs_id_seq'), primary_key=True)
    instance_id = Column(Integer, nullable=False)

    scheduler_job_id = Column(String(256))
    callback_type = Column(String(32), nullable=False)
    payload = Column(JSONB, nullable=False)
    start_date = Column(DateTime)
    end_date = Column(DateTime)
    scheduler_cron_expression = Column(String(256))
    timezone = Column(String(6), nullable=False)
    job_scheduled_on = Column(DateTime)  # it is used for onetime job trigger
    # and should be empty for recurring job
    is_deleted = Column(Boolean, nullable=False)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)


class JobHistory(SchedulerBase):
    __tablename__ = 'job_history'

    id = Column(Integer, Sequence('job_history_id_seq'), primary_key=True)
    job_id = Column(Integer, ForeignKey('jobs.id'), nullable=False)

    status = Column(String(64), nullable=False)

    status_message = Column(String(2048))

    triggered_on = Column(DateTime,
                          server_default=text("(now() at time zone 'utc')"))
