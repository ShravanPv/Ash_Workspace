from datetime import datetime

from sqlalchemy import Column, Integer, Sequence, DateTime, String, text, \
    ForeignKey, UniqueConstraint

from fusion_models.fusion.base import FusionBase


class DataSyncType(FusionBase):
    __tablename__ = 'data_sync_types'

    id = Column(Integer, Sequence('data_sync_types_id_seq'), primary_key=True)
    name = Column(String(64), nullable=False)
    description = Column(String(256), nullable=True)
    relative_url = Column(String(256), nullable=True)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, ForeignKey('users.id'), nullable=False)

    __table_args__ = (
        UniqueConstraint('name', name='_data_sync_types_name_uc'),
        UniqueConstraint(
            'relative_url', name='_data_sync_types_relative_url_uc'
        ),
    )


class DataSyncPreset(FusionBase):
    __tablename__ = 'data_sync_presets'

    id = Column(Integer, Sequence('data_sync_presets_id_seq'),
                primary_key=True)
    name = Column(String(64), nullable=False)
    description = Column(String(256), nullable=True)
    data_sync_type_id = Column(Integer, ForeignKey('data_sync_types.id'),
                               nullable=False)
    oracle_module_id = Column(Integer, ForeignKey('oracle_modules.id'),
                              nullable=False)
    report_path = Column(String(256), nullable=False)
    type = Column(String(128), nullable=False)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, ForeignKey('users.id'), nullable=False)

    __table_args__ = (
        UniqueConstraint('name', name='_data_sync_presets_name_uc'),
        UniqueConstraint('report_path',
                         name='_data_sync_presets_report_path_uc'),
    )
