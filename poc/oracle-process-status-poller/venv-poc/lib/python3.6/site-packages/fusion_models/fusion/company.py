from datetime import datetime

from sqlalchemy import Column, Integer, Sequence, String, DateTime, ForeignKey, \
    Boolean, UniqueConstraint, text
from sqlalchemy.dialects.postgresql import JSONB

from fusion_models.fusion.base import FusionBase


class Company(FusionBase):
    __tablename__ = 'companies'
    id = Column(Integer, Sequence('companies_id_seq'), primary_key=True)
    name = Column(String(64), nullable=False)
    description = Column(String(256))

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, ForeignKey('users.id'), nullable=False)
    is_active = Column(Boolean, default=True)

    __table_args__ = (UniqueConstraint('name', name='_companies_name_uc'),)


class InstanceType(FusionBase):
    __tablename__ = 'instance_types'

    id = Column(Integer, Sequence('instance_types_id_seq'), primary_key=True)
    name = Column(String(256), nullable=False)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, ForeignKey('users.id'), nullable=False)

    __table_args__ = (UniqueConstraint(
        'name', name='_instance_type_name_uc'),)


class Instance(FusionBase):
    __tablename__ = 'instances'
    id = Column(Integer, Sequence('instances_id_seq'), primary_key=True)
    name = Column(String(64), nullable=False)
    description = Column(String(256))
    type_id = Column(Integer, ForeignKey('instance_types.id'), nullable=False)
    company_id = Column(Integer, ForeignKey('companies.id'), nullable=False)
    oracle_instance_uri = Column(String(256), nullable=False)
    app_uri = Column(String(256), nullable=False)
    db_uri = Column(String(256), nullable=False)
    sftp_uri = Column(JSONB, nullable=False)
    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, ForeignKey('users.id'), nullable=False)
    is_active = Column(Boolean, default=True)

    __table_args__ = (
        UniqueConstraint('company_id', 'name',
                         name='_instances_name_company_id_uc'),
        UniqueConstraint('app_uri',
                         name='_instances_app_uri_uc'),
        UniqueConstraint('db_uri',
                         name='_instances_db_uri_uc'),
        UniqueConstraint('oracle_instance_uri',
                         name='_instances_oracle_instance_uri_uc'),
    )
