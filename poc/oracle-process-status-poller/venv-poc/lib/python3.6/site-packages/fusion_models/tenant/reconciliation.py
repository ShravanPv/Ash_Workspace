from datetime import datetime

from sqlalchemy import Column, Integer, Sequence, DateTime, \
    UniqueConstraint, ForeignKey, text, String, Index
from sqlalchemy.dialects.postgresql import JSONB

from fusion_models.tenant.base import ClientBase


class Reconciliation(ClientBase):
    __tablename__ = 'reconciliation'

    id = Column(Integer, Sequence('reconciliation_id_seq'), primary_key=True)
    fbdi_request_batch_id = Column(Integer, ForeignKey(
        'fbdi_request_batch.id'), nullable=False)

    total_records_sent = Column(Integer, nullable=False)
    fusion_callback_payload = Column(JSONB, nullable=True)
    error_report_link = Column(String(256), nullable=True)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)

    __table_args__ = (
        UniqueConstraint(
            'fbdi_request_batch_id',
            name='_reconciliation_fbdi_request_batch_id_uc'
        ),
    )


class ReconciliationDetails(ClientBase):
    __tablename__ = 'reconciliation_details'

    id = Column(Integer, Sequence('reconciliation_details_id_seq'),
                primary_key=True)
    reconciliation_id = Column(Integer, ForeignKey('reconciliation.id'),
                               nullable=False)
    file_record_id = Column(Integer, ForeignKey('file_records.id'),
                            nullable=False)
    oracle_primary_keys = Column(JSONB, nullable=True)
    status = Column(String(32), nullable=False)

    created_on = Column(DateTime,
                        server_default=text("(now() at time zone 'utc')"))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)

    __table_args__ = (
        UniqueConstraint(
            'reconciliation_id', 'file_record_id',
            name='_reconciliation_details_recon_id_file_record_id_uc'
        ),
        Index('reconciliation_details_status_idx', 'status'),
    )
