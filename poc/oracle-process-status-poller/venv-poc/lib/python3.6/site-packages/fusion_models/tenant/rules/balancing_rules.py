from datetime import datetime

from sqlalchemy import Column, Integer, Sequence, ForeignKey, DateTime, text, \
    UniqueConstraint
from sqlalchemy.dialects.postgresql import JSONB

from fusion_models.tenant.base import ClientBase


class BalancingRule(ClientBase):
    """
    This rule is probably only used in GL journal import
    """
    __tablename__ = 'balancing_rules'

    id = Column(Integer, Sequence('balancing_rules_id_seq'), primary_key=True)

    mapping_rule_id = Column(Integer, ForeignKey('mapping_rules.id'),
                             nullable=False)
    balancing_preset_id = Column(Integer, nullable=False)
    balancing_additional_info = Column(JSONB, nullable=False)
    # balancing_additional_info contains group by and threshold info

    created_on = Column(DateTime, server_default=text('(now() at time zone '
                                                      '\'utc\')'))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, nullable=False)

    __table_args__ = (
        UniqueConstraint(
            'mapping_rule_id', 'balancing_preset_id',
            name='_mapping_rule_id_balancing_preset_id_uc'
        ),
    )
