from datetime import datetime

from sqlalchemy import Column, Integer, Sequence, DateTime, text, String, \
    ForeignKey, Boolean, UniqueConstraint
from sqlalchemy.dialects.postgresql import JSONB

from fusion_models.tenant.base import ClientBase


class Grid(ClientBase):
    __tablename__ = 'grids'

    id = Column(Integer, Sequence('grids_id_seq'), primary_key=True)

    name = Column(String(64), nullable=False)
    description = Column(String(512))

    created_on = Column(DateTime, server_default=text('(now() at time zone '
                                                      '\'utc\')'))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, nullable=False)
    is_active = Column(Boolean, default=True)

    __table_args__ = (
        UniqueConstraint('name', name='_grids_name_uc'),
    )


class GridField(ClientBase):
    __tablename__ = 'grid_fields'

    id = Column(Integer, Sequence('grid_fields_id_seq'), primary_key=True)
    grid_id = Column(Integer, ForeignKey('grids.id'), nullable=False)
    name = Column(String(64), nullable=False)
    description = Column(String(512))
    sequence = Column(Integer, nullable=False)
    validation_id = Column(Integer, ForeignKey('validations.id'),
                           nullable=False)

    created_on = Column(DateTime, server_default=text('(now() at time zone '
                                                      '\'utc\')'))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, nullable=False)

    __table_args__ = (
        UniqueConstraint(
            'grid_id', 'name', name='_grid_fields_grid_id_name_uc'
        ),
    )


class GridRecord(ClientBase):
    __tablename__ = 'grid_records'

    id = Column(Integer, Sequence('grid_records_id_seq'), primary_key=True)

    grid_id = Column(Integer, ForeignKey('grids.id'), nullable=False)
    record = Column(JSONB, nullable=False)

    created_on = Column(DateTime, server_default=text('(now() at time zone '
                                                      '\'utc\')'))
    modified_on = Column(DateTime, onupdate=datetime.utcnow)
    modified_by = Column(Integer, nullable=False)
